# Dockerfile for Android Development with React Native Firebase support
FROM node:18-bullseye

WORKDIR /app

# Install system dependencies including Java 17
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    wget \
    openjdk-17-jdk \
    android-tools-adb \
    android-tools-fastboot \
    udev \
    python3 \
    python3-pip \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set JAVA_HOME properly for Java 17
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH=$PATH:$JAVA_HOME/bin

# Verify Java installation
RUN java -version && javac -version

# Install Android SDK
ENV ANDROID_HOME=/opt/android-sdk
ENV ANDROID_SDK_ROOT=/opt/android-sdk
ENV PATH=${PATH}:${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/emulator

# Create Android SDK directory
RUN mkdir -p ${ANDROID_HOME}/cmdline-tools

# Install Android Command Line Tools
RUN wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip && \
    unzip -q commandlinetools-linux-9477386_latest.zip -d ${ANDROID_HOME}/cmdline-tools && \
    mv ${ANDROID_HOME}/cmdline-tools/cmdline-tools ${ANDROID_HOME}/cmdline-tools/latest && \
    rm commandlinetools-linux-9477386_latest.zip

# Accept Android licenses
RUN yes | sdkmanager --licenses

# Install comprehensive Android SDK packages for React Native development
RUN sdkmanager \
    "platform-tools" \
    "platforms;android-34" \
    "platforms;android-33" \
    "build-tools;34.0.0" \
    "build-tools;33.0.0" \
    "emulator" \
    "system-images;android-34;google_apis;x86_64"

# Install global Node packages
RUN npm install -g @expo/cli eas-cli

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install

# Clear npm cache and reinstall to ensure clean state
RUN npm cache clean --force
RUN rm -rf node_modules package-lock.json
RUN npm install

# Copy app source
COPY . .

# Ensure React Native Firebase plugins are properly linked
RUN npx expo install --fix

# Create Android project directories
RUN mkdir -p /root/.android/avd
RUN mkdir -p /app/android

# Set proper permissions for Android development
RUN chmod -R 755 ${ANDROID_HOME}
RUN chmod -R 755 /app

# Create entrypoint script
RUN echo '#!/bin/bash\n\
echo "🤖 Android Development Container Started"\n\
echo "📱 Metro bundler will run on http://0.0.0.0:19000"\n\
echo "🔧 Java Version: $(java -version 2>&1 | head -n 1)"\n\
echo "🤖 Android SDK: $ANDROID_HOME"\n\
echo "📦 Node Modules: $(ls -la /app/node_modules/@react-native-firebase/app 2>/dev/null && echo \"✅ Firebase installed\" || echo \"❌ Firebase missing\")"\n\
echo ""\n\
# Verify React Native Firebase installation\n\
if [ -d "/app/node_modules/@react-native-firebase/app" ]; then\n\
    echo "✅ React Native Firebase detected"\n\
else\n\
    echo "❌ React Native Firebase not found - reinstalling..."\n\
    npm install @react-native-firebase/app @react-native-firebase/messaging\n\
fi\n\
echo ""\n\
echo "🔌 Development Options:"\n\
echo "   1. Physical device: Connect via USB and enable debugging"\n\
echo "   2. Expo Go: Install app and scan QR code"\n\
echo "   3. Development build: npx expo run:android --device"\n\
echo ""\n\
# Try to start ADB\n\
echo "🔄 Starting ADB server..."\n\
adb start-server 2>/dev/null || echo "⚠️  ADB compatibility issue (use Expo Go app instead)"\n\
echo ""\n\
exec "$@"' > /entrypoint-android.sh && \
    chmod +x /entrypoint-android.sh

# Expose ports
EXPOSE 19000 19001 19002 8081

# Set environment variables
ENV EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
ENV REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
ENV ANDROID_EMULATOR_USE_SYSTEM_LIBS=1
ENV NODE_ENV=development
ENV EAS_BUILD_PLATFORM=android

# Add Android tools to PATH
ENV PATH=$PATH:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin

ENTRYPOINT ["/entrypoint-android.sh"]
CMD ["npx", "expo", "start", "--dev-client", "--android", "--port", "19000", "--host", "0.0.0.0"]