# Dockerfile for iOS Development (macOS host required)
FROM node:18

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    bash \
    curl \
    python3 \
    python3-pip \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install Expo CLI and EAS CLI
RUN npm install -g @expo/cli eas-cli

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install

# Copy source code
COPY . .

# Set environment variables for iOS development
ENV EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
ENV REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
ENV EAS_BUILD_PLATFORM=ios
ENV NODE_ENV=development

# Expose ports
EXPOSE 8081 19000 19001 19002

# Create entrypoint script
RUN echo '#!/bin/bash\n\
echo "🍎 iOS Development Container Started"\n\
echo "📱 Metro bundler running on http://0.0.0.0:19000"\n\
echo ""\n\
echo "⚠️  Important: For iOS development:"\n\
echo "   • Xcode must be installed on macOS host"\n\
echo "   • iOS Simulator runs on host, not in container"\n\
echo "   • This container only runs Metro bundler"\n\
echo ""\n\
echo "💡 Next steps:"\n\
echo "   1. On your macOS host, run: npx expo run:ios --device"\n\
echo "   2. Or connect iOS Simulator to this Metro server"\n\
echo ""\n\
exec "$@"' > /entrypoint-ios.sh && \
    chmod +x /entrypoint-ios.sh

ENTRYPOINT ["/entrypoint-ios.sh"]
CMD ["npx", "expo", "start", "--dev-client", "--ios"]